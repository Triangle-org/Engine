#!/usr/bin/env php
<?php declare(strict_types=1);

/**
 * @package     Triangle Engine (FrameX Project)
 * @link        https://github.com/localzet/FrameX      FrameX Project v1-2
 * @link        https://github.com/Triangle-org/Engine  Triangle Engine v2+
 *
 * @author      Ivan Zorin <creator@localzet.com>
 * @copyright   Copyright (c) 2018-2024 Localzet Group
 * @license     https://www.gnu.org/licenses/agpl AGPL-3.0 license
 *
 *              This program is free software: you can redistribute it and/or modify
 *              it under the terms of the GNU Affero General Public License as
 *              published by the Free Software Foundation, either version 3 of the
 *              License, or (at your option) any later version.
 *
 *              This program is distributed in the hope that it will be useful,
 *              but WITHOUT ANY WARRANTY; without even the implied warranty of
 *              MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *              GNU Affero General Public License for more details.
 *
 *              You should have received a copy of the GNU Affero General Public License
 *              along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

use Triangle\Console;
use Triangle\Engine\Autoload;
use Triangle\Engine\Environment;
use Triangle\Engine\Path;

if (!Phar::running()) chdir(__DIR__);
require_once __DIR__ . '/vendor/autoload.php';

// Основная директория проекта
Path::$basePath = BASE_PATH;

// Конфигурация и контроллеры
Path::$configPath = Path::basePath('config');
Path::$appPath = Path::basePath('app');

// Статика, логи и временные
// ВАЖНО! Используется runPath() для определения рабочей директории!
// Это позволяет при работе из бинарника писать логи в директорию рядом с ним
Path::$publicPath = Path::runPath('public');
Path::$runtimePath = Path::runPath('runtime');

// Загрузка переменных окружения
// Путь и имя файла могут быть массивом путей и файлов
Environment::load(Path::runPath(), '.env');

// Автозагрузка конфигурации и файлов
// + Bootstrap, Middleware, Database, Session, Router, Events, Cron
Autoload::start($argv[1] ?? '');

// Запуск консоли и выполнение запрошенной команды
Console::runAll();
